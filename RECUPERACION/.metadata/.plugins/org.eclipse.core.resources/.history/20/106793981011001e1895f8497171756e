package controller;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

public class EscribirDOM {

try {
    // Crear un documento XML usando DOM
    DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
    DocumentBuilder docBuilder = docFactory.newDocumentBuilder();
    Document doc = docBuilder.newDocument();

    // Crear el elemento ra√≠z
    Element rootElement = doc.createElement("viviendas");
    doc.appendChild(rootElement);

    // Agregar las viviendas al documento
    for (Vivienda vivienda : viviendas) {
        // Crear el elemento de vivienda
        Element viviendaElement = doc.createElement("vivienda");
        rootElement.appendChild(viviendaElement);

        // Agregar el atributo tipo a la vivienda
        viviendaElement.setAttribute("tipo", vivienda.getTipo());

        // Agregar las zonas a la vivienda
        for (Zona zona : vivienda.getZonas()) {
            Element zonaElement = doc.createElement("zona");
            zonaElement.appendChild(doc.createTextNode(zona.toString()));
            viviendaElement.appendChild(zonaElement);
        }
    }

    // Escribir el contenido del documento XML en un archivo
    TransformerFactory transformerFactory = TransformerFactory.newInstance();
    Transformer transformer = transformerFactory.newTransformer();
    DOMSource source = new DOMSource(doc);
    StreamResult result = new StreamResult(new File("viviendas.xml"));
    transformer.transform(source, result);

    System.out.println("Archivo XML generado correctamente.");

} catch (ParserConfigurationException | TransformerException e) {
    e.printStackTrace();
}


}
