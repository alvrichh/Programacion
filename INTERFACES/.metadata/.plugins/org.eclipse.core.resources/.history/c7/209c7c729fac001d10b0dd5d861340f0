package view.menu;

import java.util.Scanner;

import controller.COAC;
import controller.COAC.TipoOrdenacion;
import controller.COAC.TiposAgrupacion;
import view.Util;
import view.menu.agrupacion.MenuAgrupacion;
import view.menu.concurso.MenuConcurso;
import view.menu.integrante.MenuIntegrante;

public class Menu {

	private static final int INTDEFECTO = 0;
	private static final String MSGINTDEFECTO = "VALOR INTRODUCIDO INCORRECTO, GUARDADO VALOR POR DEFECTO [ "
			+ INTDEFECTO + " ]";

	private static Scanner entrada = new Scanner(System.in);
	public static COAC coac = new COAC();

	// Inicio
	public static void gestionPrograma() {
		int opc;
		do {
			mostrarMenuPrincipal();
			try {
				opc = Util.leerInt("Opción [0 - Salir] : ");
			} catch (Exception e) {
				System.err.println(MSGINTDEFECTO);
				opc = INTDEFECTO;
			}

			switch (opc) {
			case 0 -> finDelPrograma();
			case 1 -> MenuIntegrante.opcIntegrantes();
			case 2 -> MenuAgrupacion.opcAñadirAgrupacion();
			case 3 -> opc3();
			case 4 -> MenuAgrupacion.opcEditarAgrupacion();
			case 5 -> MenuConcurso.opcConcurso();
			case 6 -> {
				System.out.println(coac.listarTodo());
				System.out.print("\nPulsa Intro para volver");
				entrada.nextLine();
			}
			case 7 -> opc7();

			case 8 -> opc8();

			case 9 -> opc9();

			case 10 -> opc10();

			case 11 -> opc11();

			case 12 -> opc12();

			case 13 -> opc13();

			case 14 -> opc14();

			}
			if (opc > 14 || opc < 0)
				System.err.print("\nOpcion incorrecta!");
		} while (opc != 0);

		finDelPrograma();

	}
	private static void opc14() {
		System.out.println("\nAgrupaciones antes de ordenar");
		System.out.println(coac.listarTodo());

		if (!coac.ordenarAgrupaciones(TipoOrdenacion.MUSICALETRA)) {
			System.out.println("Agrupaciones despues de ordenar");
			coac.ordenarAgrupaciones(TipoOrdenacion.MUSICALETRA);
			System.out.println(coac.listarTodo());
			System.out.println("Presiona enter para volver");
			entrada.nextLine();
		} else {
			System.err.println("No hay agrupaciones para ordenar");
			System.out.println("Presiona enter para volver");
			entrada.nextLine();
		}
	}
	private static void opc13() {
		System.out.println("\nAgrupaciones antes de ordenar");
		System.out.println(coac.listarTodo());

		if (!coac.ordenarAgrupaciones(TipoOrdenacion.AUTOR)) {
			System.out.println("Agrupaciones despues de ordenar");
			coac.ordenarAgrupaciones(TipoOrdenacion.AUTOR);
			System.out.println(coac.listarTodo());
			System.out.println("Presiona enter para volver");
			entrada.nextLine();
		} else {
			System.err.println("No hay agrupaciones para ordenar");
			System.out.println("Presiona enter para volver");
			entrada.nextLine();

		}
	}
	private static void opc12() {
		System.out.println("\nAgrupaciones antes de ordenar");
		System.out.println(coac.listarTodo());

		if (!coac.ordenarAgrupaciones(TipoOrdenacion.NOMBRE)) {
			System.out.println("Agrupaciones despues de ordenar");
			coac.ordenarAgrupaciones(TipoOrdenacion.NOMBRE);
			System.out.println(coac.listarTodo());
			System.out.println("Presiona enter para volver");
			entrada.nextLine();
		} else {
			System.err.println("No hay agrupaciones para ordenar");
			System.out.println("Presiona enter para volver");
			entrada.nextLine();

		}
	}
	private static void opc11() {
		int opcT;
		do {
			System.out.println(coac.listasIndividuales(TiposAgrupacion.ROMANCERO));
			System.out.print("\nPulsa Intro para volver");
			entrada.nextLine();
			opcT = 0;

		} while (opcT != 0);
	}
	// TODO
	private static void opc10() {
		int opcT;
		do {
			System.out.println(coac.listasIndividuales(TiposAgrupacion.COMPARSA));
			System.out.print("\nPulsa Intro para volver");
			entrada.nextLine();
			opcT = 0;

		} while (opcT != 0);
	}
	// TODO
	private static void opc9() {
		int opcT;
		do {
			System.out.println(coac.listasIndividuales(TiposAgrupacion.CUARTETO));
			System.out.print("\nPulsa Intro para volver");
			entrada.nextLine();
			opcT = 0;

		} while (opcT != 0);
	}
	// TODO
	private static void opc8() {
		int opcT;
		do {
			System.out.println(coac.listasIndividuales(TiposAgrupacion.CORO));
			System.out.print("\nPulsa Intro para volver");
			entrada.nextLine();
			opcT = 0;

		} while (opcT != 0);
	}
	// TODO
	private static void opc7() {
		int opcT;
		do {
			System.out.println(coac.listasIndividuales(TiposAgrupacion.CHIRIGOTA));
			System.out.print("\nPulsa Intro para volver");
			entrada.nextLine();
			opcT = 0;

		} while (opcT != 0);
	}
	// TODO
	private static void opc3() {
		int opcT;
		do {
			Util.escribir("\n");
			Util.escribir("┌──────────────────────────┐");
			Util.escribir("│    ELIMINAR AGRUPACION   │");
			Util.escribir("└──────────────────────────┘");
			String s = coac.listarTodo();
			System.out.println(s);
			if (!s.contains("VACIA")) {
				try {
					opcT = Util.leerInt("Introduce la posicion del que desea eliminar\nOpción [0 - Volver] : ");

				} catch (Exception e) {
					opcT = INTDEFECTO;
					System.err.println(MSGINTDEFECTO);
				}
			} else {
				System.out.println("Presiona enter para volver");
				entrada.nextLine();
				opcT = 0;
			}

			if (opcT > 0 && opcT <= coac.getNumeroDeAgrupacionesActual()) {
				if (coac.eliminarAgrupacion(opcT - 1)) {
					System.out.println("\nEliminado correctamente");
					opcT = 0;
				} else {
					System.err.print("\nNo se ha podido eliminar");
					opcT = 0;
				}

			} else {
				if (opcT != 0)
					System.err.print("La posicion introducida no se encuentra.");

				opcT = 0;
			}

		} while (opcT != 0);
	}
	// TODO
	private static void mostrarMenuPrincipal() {
		Util.escribir("\n");
		Util.escribir("╔═══════════════════════════════════╗");
		Util.escribir("║      GESTION DE AGRUPACIONES      ║");
		Util.escribir("╚═══════════════════════════════════╝");
		Util.escribir("  1. Gestión de Participantes.");
		Util.escribir("  2. Añadir una agrupación.");
		Util.escribir("  3. Eliminar una agrupación.");
		Util.escribir("  4. Editar datos de una agrupación.");
		Util.escribir("  5. Gestión del Concurso.");
		Util.escribir("Listado de agrupaciones:");
		Util.escribir("  6. Listar todas.");
		Util.escribir("  7. Listar Chirigotas.");
		Util.escribir("  8. Listar Coros.");
		Util.escribir("  9. Listar Cuartetos.");
		Util.escribir(" 10. Listar Comparsas.");
		Util.escribir(" 11. Listar Romanceros.");
		Util.escribir("Ordenar el listado:");
		Util.escribir(" 12. Ordenar por el nombre.");
		Util.escribir(" 13. Ordenar por el autor.");
		Util.escribir(" 14. Ordenar por el autor de música/letra.");

	}
	// TODO
	private static void finDelPrograma() {
		Util.escribir("\nFin del programa.");
		System.exit(0);
	}
}
